/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define _FROG 0
#define _FROG2 1
#define _SYM 2
#define _NUM 3
#define _EXT 4

/ {
        keymap {
                compatible = "zmk,keymap";

                _frog_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  F  |  D  |  N  |  I  |  G  |    |  G  |  I  |  N  |  D  |  F  | ESC  |
// | BKSP |  S  |  T  |  H  |  E  |  O  |    |  O  |  E  |  H  |  T  |  S  | BKSP |
// | SHFT |  C  |  W  |  R  |  A  |  U  |    |  U  |  A  |  R  |  W  |  C  | SHFT |
//                    | NUM | SYM | SPC |    | SPC | SYM | NUM |
                        bindings = <
   &kp ESC   &kp F &kp D &kp N &kp I &kp G   &kp G &kp I  &kp N &kp D &kp F &kp ESC
   &kp BSPC  &kp S &kp T &kp H &kp E &kp O   &kp O &kp E  &kp H &kp T &kp S &kp BKSP
   &kp LSHFT &kp C &kp W &kp R &kp A &kp U   &kp U &kp A  &kp R &kp W &kp C &kp RSHFT
            &mo 3 &mo 2 &lt _FROG2 SPACE     &lt _FROG2 SPACE &mo 2 &mo 3
                        >;
                };
				_frog2_layer {
// -----------------------------------------------------------------------------------------
// |  ENT |  J  |  K  |  M  |  '  |  -_ |    |  -_ |  '  |  M  |  K  |  J  | ENT  |
// | BKSP |  Y  |  P  |  L  |  .  |  Q  |    |  Q  |  .  |  L  |  P  |  Y  | BKSP |
// | SHFT |  X  |  B  |  V  |  ,  |  Z  |    |  Z  |  ,  |  V  |  B  |  X  | SHFT |
//                    | NUM | SYM | SPC |    | SPC | SYM | NUM |
                        bindings = <
   &kp ENT   &kp J &kp K &kp M &kp SQT   &kp MINUS   &kp MINUS &kp SQT    &kp M &kp K &kp J &kp ENT
   &kp BSPC  &kp Y &kp P &kp L &kp DOT   &kp Q       &kp Q     &kp DOT    &kp L &kp P &kp Y &kp BKSP
   &kp RSHFT &kp X &kp B &kp V &kp COMMA &kp Z       &kp Z     &kp COMMA  &kp V &kp B &kp X &kp RSHFT
            &mo 3 &mo 2 &lt _FROG2 SPACE             &lt _FROG2 SPACE &mo 2 &mo 3
                        >;
                };
                _sym_layer {
// -----------------------------------------------------------------------------------------
// | TAB |  [  |  {  |  (  |  @  |  ^  |							   |  ^  |  @  |  (  |  {  |  [  | TAB |
// |  \| |  :  |  ;  |  ?  |  !  |  /  |							   |  /  |  !  |  ?  |  ;  |  :  |  \| |
// |  `  |  ]  |  }  |  )  |  &  |  *  |							   |  *  |  &  |  )  |  }  |  ]  |  `  |
//                   | NUM | SYM | SPC |							   | SPC | SYM | NUM |
                        bindings = <
   &kp TAB    &kp LBKT   &kp LBRC  &kp LPAR    &kp AT    &kp CARET     &kp CARET &kp AT   &kp LPAR  &kp LBRC &kp LBKT  &kp TAB
   &kp BSLH   &kp COLON  &kp SEMI  &kp QMARK   &kp EXCL  &kp FSLH      &kp FSLH  &kp EXCL &kp QMARK &kp SEMI &kp COLON &kp BSLH
   &kp TILDE  &kp RBKT   &kp RBRC  &kp RPAR    &kp AMPS  &kp ASTRK     &kp ASTRK &kp AMPS &kp RPAR  &kp RBRC &kp RBKT  &kp TILDE
									   &mo 3 &mo 2 &lt _FROG2 SPACE    &lt _FROG2 SPACE &mo 2 &mo 3
                        >;
                };

                _num_layer {
// -----------------------------------------------------------------------------------------
// |  =  |  6  |  7  |  8  |  9  |  .  |   					  |  ,  |  9  |  8  |  7  |  6  |  =  |
// |  +  |  1  |  2  |  3  |  4  |  5  |   					  |  5  |  4  |  3  |  2  |  1  |  +  |
// |  -  |  #  |  $  |  %  |  0  |  ,  |   					  |  ,  |  0  |  %  |  $  |  #  |  -  |
//                   | NUM | SYM | SPC |   					  | SPC | SYM | NUM |
                        bindings = <
   &kp EQUAL &kp N6   &kp N7   &kp N8    &kp N9  &kp PERIOD   &kp PERIOD &kp N9 &kp N8    &kp N7   &kp N6   &kp EQUAL
   &kp PLUS  &kp N1   &kp N2   &kp N3    &kp N4  &kp N5       &kp N5     &kp N4 &kp N3    &kp N2   &kp N1   &kp PLUS
   &kp MINUS &kp HASH &kp DLLR &kp PRCNT &kp N0  &kp COMMA    &kp COMMA  &kp N0 &kp PRCNT &kp DLLR &kp HASH &kp MINUS
                              &mo 3 &mo 2 &lt _FROG2 SPACE    &lt _FROG2 SPACE &mo 2 &mo 3
                        >;
				};
						
				_ext_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  ESC  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans    &trans  &trans    &trans    &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp PIPE &kp GRAVE
   &kp LSHFT &trans    &trans  &trans    &trans    &trans      &trans    &trans    &trans          &trans   &kp BSLH &kp TILDE
                                   &kp LGUI &trans &kp SPACE   &kp RET &trans &kp RALT
                        >;
                };
        };
};
